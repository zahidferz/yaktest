# Node.js with Vue
# Build a Node.js project that uses Vue.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
# Note that the trigger is ignored and overriden by Azure Pipelines options
name: $(SourceBranchName)
pool:
  vmImage: 'Ubuntu-16.04'

jobs:
  - job: GetVersion
    displayName: Get Version
    steps:
      - bash: |
          VERSIONT=$(jq -r .version package.json)
          echo "##vso[task.setvariable variable=version;isOutput=true]$VERSIONT"
        name: App

  - job: Build
    displayName: Build
    dependsOn: GetVersion
    variables:
      appVersion: $[ dependencies.GetVersion.outputs['App.version'] ]
      buildIncrement: $[counter(variables['appVersion'], 0)] # create a counter that is used to increment build run for same app version
      buildVersion: '$(appVersion)-r$(buildIncrement)'
      npm_config_cache: $(Pipeline.Workspace)/.npm
    steps:
      - bash: echo "##vso[build.updatebuildnumber]$(buildVersion)" # Update build number in Pipeline UI
        displayName: Update build number

      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Install Node.js'

      - script: |
          sudo -- sh -c -e "echo '127.0.0.1 dev.local' >> /etc/hosts";
          ls
          echo "--------------------------------"
          cd $(System.DefaultWorkingDirectory)
          ls
        displayName: 'Edit Host'

      - task: Cache@2
        inputs:
          key: 'npm | "$(Agent.OS)" | package-lock.json'
          restoreKeys: |
             npm | "$(Agent.OS)"
          path: $(npm_config_cache)
        displayName: Cache npm

      - task: Npm@1
        inputs:
          command: 'ci'
        displayName: 'Install dependencies'

      - script: |
          npm run test:unit
        displayName: 'Run tests unit'
        env:
          VUE_APP_ACC_PROV_URL_CLIENT_ID: $(VUE_APP_ACC_PROV_URL_CLIENT_ID)
          VUE_APP_ACC_PROV_URL_CLIENT_SECRET: $(VUE_APP_ACC_PROV_URL_CLIENT_SECRET)
          VUE_APP_AUTH0_CLIENT_ID: $(VUE_APP_AUTH0_CLIENT_ID)
          VUE_APP_AUTH_URL_APP_ID: $(VUE_APP_AUTH_URL_APP_ID)
          VUE_APP_AUTH_URL_CLIENT_ID: $(VUE_APP_AUTH_URL_CLIENT_ID)
          VUE_APP_AUTH_URL_APP_SECRET: $(VUE_APP_AUTH_URL_APP_SECRET)
          VUE_APP_INTERCOM: $(VUE_APP_INTERCOM)

      # - script: |
      #     yarn test:e2e
      #   displayName: 'Run tests e2e'
      #   env:
      #     VUE_APP_ACC_PROV_URL_CLIENT_ID: $(VUE_APP_ACC_PROV_URL_CLIENT_ID)
      #     VUE_APP_ACC_PROV_URL_CLIENT_SECRET: $(VUE_APP_ACC_PROV_URL_CLIENT_SECRET)
      #     VUE_APP_AUTH0_CLIENT_ID: $(VUE_APP_AUTH0_CLIENT_ID)
      #     VUE_APP_AUTH_URL_APP_ID: $(VUE_APP_AUTH_URL_APP_ID)
      #     VUE_APP_AUTH_URL_CLIENT_ID: $(VUE_APP_AUTH_URL_CLIENT_ID)
      #     VUE_APP_AUTH_URL_APP_SECRET: $(VUE_APP_AUTH_URL_APP_SECRET)
      #   timeoutInMinutes: 15

      #- task: PublishPipelineArtifact@0
      #  displayName: 'Publish Screenshots (Cypress)'
      #  condition: failed()
      #  inputs:
      #    artifactName: 'screenshots'
      #    targetPath: '$(Build.SourcesDirectory)/tests/e2e/screenshots'
      #
      #- task: PublishPipelineArtifact@0
      #  displayName: 'Publish Videos (Cypress)'
      #  condition: failed()
      #  inputs:
      #    artifactName: 'videos'
      #    targetPath: '$(Build.SourcesDirectory)/tests/e2e/videos'
      #
      #- task: PublishTestResults@2
      #  displayName: Publish test results (Cypress)
      #  condition: succeededOrFailed()
      #  inputs:
      #    testRunner: JUnit
      #    testResultsFiles: '$(Build.SourcesDirectory)/tests/cypress-junit-report.*.xml'

      - script: |
          npm run build $(BUILD_MODE)
        #  npm run storybook:build
        displayName: 'Run build'
        env:
          VUE_APP_ACC_PROV_URL_CLIENT_ID: $(VUE_APP_ACC_PROV_URL_CLIENT_ID)
          VUE_APP_ACC_PROV_URL_CLIENT_SECRET: $(VUE_APP_ACC_PROV_URL_CLIENT_SECRET)
          VUE_APP_AUTH0_CLIENT_ID: $(VUE_APP_AUTH0_CLIENT_ID)
          VUE_APP_AUTH_URL_APP_ID: $(VUE_APP_AUTH_URL_APP_ID)
          VUE_APP_AUTH_URL_CLIENT_ID: $(VUE_APP_AUTH_URL_CLIENT_ID)
          VUE_APP_AUTH_URL_APP_SECRET: $(VUE_APP_AUTH_URL_APP_SECRET)
          VUE_APP_INTERCOM: $(VUE_APP_INTERCOM)

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist'
          includeRootFolder: true

      # - task: ArchiveFiles@2
      # inputs:
      # rootFolderOrFile: '$(System.DefaultWorkingDirectory)/storybook-static'
      # includeRootFolder: true

      - task: PublishBuildArtifacts@1
