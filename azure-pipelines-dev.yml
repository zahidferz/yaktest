
# Node.js with Vue
# Build a Node.js project that uses Vue.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
# Note that the trigger is ignored and overriden by Azure Pipelines options
resources:
  repositories:
  - repository: yaktest # The name used to reference this repository in the checkout step
    type: github
    endpoint: za
    name: zahidferz/yaktest
    ref: $(Build.SourceBranchName)

  - repository: gx-yak-tests # The name used to reference this repository in the checkout step
    type: github
    endpoint: gx-github
    name: gestionix/gx-yak-tests

name: $(SourceBranchName)
pool:
  vmImage: 'Ubuntu-16.04'

jobs:

  - job: GetVersion
    displayName: Get Version
    steps:
      - bash: |
          VERSIONT=$(jq -r .version package.json)
          echo "##vso[task.setvariable variable=version;isOutput=true]$VERSIONT"
        name: App

  - job: Build
    displayName: Build
    dependsOn: GetVersion
    variables:
      appVersion: $[ dependencies.GetVersion.outputs['App.version'] ]
      buildIncrement: $[counter(variables['appVersion'], 0)] # create a counter that is used to increment build run for same app version
      buildVersion: '$(appVersion)-r$(buildIncrement)'
    steps:
      - bash: |
          echo "##vso[build.updatebuildnumber]$(buildVersion)" # Update build number in Pipeline UI
          sudo -- sh -c -e "echo '127.0.0.1 dev.local' >> /etc/hosts";
        displayName: Update build number

      - checkout: yaktest

      - task: PowerShell@2
        displayName: Update CIPSERVER
        inputs:
          filePath: 'ciserver.ps1'
        env:
          STAGE: $(STAGE)

      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Install Node.js'

      - task: Cache@2
        inputs:
          key: 'npm | $(Agent.OS) | $(System.DefaultWorkingDirectory)/package-lock.json'
          path: '/home/vsts/.npm'
          restoreKeys: 'npm | $(Agent.OS) | $(System.DefaultWorkingDirectory)/package-lock.json'
        displayName: Cache npm

      - script: |
          npm ci
        displayName: 'Install dependencies'

      - task: Bash@3
        inputs:
          filePath: '$(System.DefaultWorkingDirectory)/ciserver.sh'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
        displayName: 'Start CI Server'

      - script: |
          npm run test:unit
        displayName: 'Run tests unit'
        env:
          VUE_APP_ACC_PROV_URL_CLIENT_ID: $(VUE_APP_ACC_PROV_URL_CLIENT_ID)
          VUE_APP_ACC_PROV_URL_CLIENT_SECRET: $(VUE_APP_ACC_PROV_URL_CLIENT_SECRET)
          VUE_APP_AUTH0_CLIENT_ID: $(VUE_APP_AUTH0_CLIENT_ID)
          VUE_APP_AUTH_URL_APP_ID: $(VUE_APP_AUTH_URL_APP_ID)
          VUE_APP_AUTH_URL_CLIENT_ID: $(VUE_APP_AUTH_URL_CLIENT_ID)
          VUE_APP_AUTH_URL_APP_SECRET: $(VUE_APP_AUTH_URL_APP_SECRET)
          VUE_APP_INTERCOM: $(VUE_APP_INTERCOM)

      - script: |
          npm run build $(BUILD_MODE)
        #  npm run storybook:build
        displayName: 'Run build'
        env:
          VUE_APP_ACC_PROV_URL_CLIENT_ID: $(VUE_APP_ACC_PROV_URL_CLIENT_ID)
          VUE_APP_ACC_PROV_URL_CLIENT_SECRET: $(VUE_APP_ACC_PROV_URL_CLIENT_SECRET)
          VUE_APP_AUTH0_CLIENT_ID: $(VUE_APP_AUTH0_CLIENT_ID)
          VUE_APP_AUTH_URL_APP_ID: $(VUE_APP_AUTH_URL_APP_ID)
          VUE_APP_AUTH_URL_CLIENT_ID: $(VUE_APP_AUTH_URL_CLIENT_ID)
          VUE_APP_AUTH_URL_APP_SECRET: $(VUE_APP_AUTH_URL_APP_SECRET)
          VUE_APP_INTERCOM: $(VUE_APP_INTERCOM)
        workingDirectory: $(System.DefaultWorkingDirectory)

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist'
          includeRootFolder: true
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(STAGE)-$(buildVersion).zip'
          replaceExistingArchive: true

      # - task: ArchiveFiles@2
      # inputs:
      # rootFolderOrFile: '$(System.DefaultWorkingDirectory)/storybook-static'
      # includeRootFolder: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: '$(STAGE)-$(buildVersion)'
          publishLocation: 'Container'

  - job: PreTest
    pool: Server

    displayName: Setup Test
    dependsOn: GetVersion
    steps:
    
      - task: Delay@1
        displayName: Setting Up
        inputs:
          delayForMinutes: '1'

  - job: Test
    strategy:
      parallel: 2
    displayName: Test
    dependsOn: PreTest

    steps:

      - checkout: gx-yak-tests

      - script: | 
          NumAg=$(echo $AGENTNAME | awk '{print $2}')
          echo "##vso[task.setvariable variable=Number;isOutput=true]$NumAg"
        name: CI
        env:
          AGENTNAME: $(Agent.JobName)

      - script: |
          npm ci
        displayName: 'Install dependencies'

      - bash: |
          echo $CIPSERVER
          until curl -sf $CIPSERVER; do curl $CIPSERVER:8080; sleep 1; done; sleep 10
        displayName: 'Wait until CI Server is Up to Test on it'
        env: 
          CIPSERVER: $(CIPSERVER)

      - script: |
          npx cypress run --spec "/cypress/integration//Desktop/*" --reporter-options mochaFile=results/Desktop_Results.xml --record --parallel --ci-build-id $(buildVersion) --group "Desktop" --tag $(STAGE) \
      #    && npx cypress run --spec "/cypress/integration//Mobile/*" --reporter-options mochaFile=results/Mobile_Results.xml --record --parallel --ci-build-id $(buildVersion) --group "Mobile" --tag $(STAGE)
        displayName: 'Run tests e2e'
        env:
          VUE_APP_ACC_PROV_URL_CLIENT_ID: $(VUE_APP_ACC_PROV_URL_CLIENT_ID)
          VUE_APP_ACC_PROV_URL_CLIENT_SECRET: $(VUE_APP_ACC_PROV_URL_CLIENT_SECRET)
          VUE_APP_AUTH0_CLIENT_ID: $(VUE_APP_AUTH0_CLIENT_ID)
          VUE_APP_AUTH_URL_APP_ID: $(VUE_APP_AUTH_URL_APP_ID)
          VUE_APP_AUTH_URL_CLIENT_ID: $(VUE_APP_AUTH_URL_CLIENT_ID)
          VUE_APP_AUTH_URL_APP_SECRET: $(VUE_APP_AUTH_URL_APP_SECRET)
          VUE_APP_INTERCOM: $(VUE_APP_INTERCOM)
          CYPRESS_HOST: $(CIPSERVER):8080
        timeoutInMinutes: 15
        workingDirectory: $(System.DefaultWorkingDirectory)
        continueOnError: true

      - task: PublishPipelineArtifact@0
        displayName: 'Publish Screenshots (Cypress)'
        inputs:
          artifactName: 'E2E-Screenshots_$(CI.Number)'
          targetPath: '$(Build.SourcesDirectory)/cypress/screenshots/'
          publishLocation: 'pipeline'
        condition: in(variables['Agent.JobStatus'], 'SucceededWithIssues')

      - task: PublishPipelineArtifact@0
        displayName: 'Publish Videos (Cypress)'
        inputs:
          artifactName: 'E2E-Videos_$(CI.Number)'
          targetPath: '$(Build.SourcesDirectory)/cypress/videos/'
          publishLocation: 'pipeline'
        condition: in(variables['Agent.JobStatus'], 'SucceededWithIssues')

      - task: PublishTestResults@2
        displayName: Publish test results (Cypress)
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '$(System.DefaultWorkingDirectory)/results/*.xml'
          searchFolder: '$(System.DefaultWorkingDirectory)'
          testRunTitle: 'E2E-Results'
        condition: succeededOrFailed()
