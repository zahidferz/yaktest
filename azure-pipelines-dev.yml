
# Node.js with Vue
# Build a Node.js project that uses Vue.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
# Note that the trigger is ignored and overriden by Azure Pipelines options
resources:
  repositories:
  - repository: yaktest # The name used to reference this repository in the checkout step
    type: github
    endpoint: za
    name: zahidferz/yaktest
    ref: $(Build.SourceBranchName)

  - repository: gx-yak-tests # The name used to reference this repository in the checkout step
    type: github
    endpoint: gx-github
    name: gestionix/gx-yak-tests

name: $(SourceBranchName)
pool:
  vmImage: 'Ubuntu-16.04'

jobs:

  - job: GetVersion
    displayName: Get Version

    steps:
      - bash: |
          VERSIONT=$(jq -r .version package.json)
          echo "##vso[task.setvariable variable=version;isOutput=true]$VERSIONT"
        name: App

  - job: Build
    displayName: Build
    dependsOn: GetVersion
    variables:
      appVersion: $[ dependencies.GetVersion.outputs['App.version'] ]
      buildIncrement: $[counter(variables['appVersion'], 0)] # create a counter that is used to increment build run for same app version
      buildVersion: '$(appVersion)-r$(buildIncrement)'

    steps:
      - bash: echo "##vso[build.updatebuildnumber]$(buildVersion)" # Update build number in Pipeline UI
        displayName: Update build number

      - checkout: gx-yak-tests
      - checkout: yaktest

      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Install Node.js'

      - script: |
          sudo -- sh -c -e "echo '127.0.0.1 dev.local' >> /etc/hosts";
          cp -a $(System.DefaultWorkingDirectory)/gx-yak-tests/cypress/integration/.  $(System.DefaultWorkingDirectory)/yaktest/tests/e2e/specs
          cp -a $(System.DefaultWorkingDirectory)/gx-yak-tests/cypress/plugins/. $(System.DefaultWorkingDirectory)/yaktest/tests/e2e/plugins
          cp -a $(System.DefaultWorkingDirectory)/gx-yak-tests/cypress/fixtures/. $(System.DefaultWorkingDirectory)/yaktest/tests/e2e/fixtures
          cp -a $(System.DefaultWorkingDirectory)/gx-yak-tests/cypress/support/. $(System.DefaultWorkingDirectory)/yaktest/tests/e2e/support
          cp -a $(System.DefaultWorkingDirectory)/gx-yak-tests/cypress.env.json $(System.DefaultWorkingDirectory)/yaktest/
        displayName: 'Setting up Cypress'

    - job: Test 
      dependsOn: Build
      steps:
        - script: |
        echo $(buildVersion)


